#include <sdf/core/binary_file.hpp>

//----------------------------------------------------------------------------------------------------------------------
sdf::binary_file_out::binary_file_out(const std::string &i_filename)
{
	m_stream.open(i_filename.c_str(),std::ios::out | std::ios::binary);
}

//----------------------------------------------------------------------------------------------------------------------
bool sdf::binary_file_out::is_open() const
{
    return m_stream.is_open();
}

//----------------------------------------------------------------------------------------------------------------------
void sdf::binary_file_out::close()
{
	m_stream.close();
}

//----------------------------------------------------------------------------------------------------------------------
sdf::binary_file_out::~binary_file_out()
{
    m_stream.close();
}



//----------------------------------------------------------------------------------------------------------------------
sdf::binary_file_in::binary_file_in(const std::string& i_filename)
{
    m_stream.open(i_filename.c_str(),std::ios::in | std::ios::binary);
}

//----------------------------------------------------------------------------------------------------------------------
bool sdf::binary_file_in::is_open() const
{
    return m_stream.is_open();
}

//----------------------------------------------------------------------------------------------------------------------
void sdf::binary_file_in::close()
{
	m_stream.close();
}

//----------------------------------------------------------------------------------------------------------------------
sdf::binary_file_in::~binary_file_in()
{
    m_stream.close();
}
