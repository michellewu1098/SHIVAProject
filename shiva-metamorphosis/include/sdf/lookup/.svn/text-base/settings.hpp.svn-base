#ifndef SDF_LOOKUP_SETTINGS_INCLUDED
#define SDF_LOOKUP_SETTINGS_INCLUDED

namespace sdf
{
	namespace detail
	{
		//----------------------------------------------------------------------------------------------------------------------
		/// @class settings "include/sdf/lookup/settings.hpp"
		/// @brief A data class for heuristic values
		/// @author Mathieu Sanchez
		/// @version 1.0
		/// @date Last Revision 28/06/11 Initial revision
		//----------------------------------------------------------------------------------------------------------------------
		class settings
		{
		public :
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Constructor
			/// @param[in] i_maxdepth Maximum depth, 0 will be one level, 1 two etc...
			/// @param[in] i_min Minimum number of polygons per leaf
			/// @param[in] i_max Maximum number of polygons per leaf
			/// @param[in] i_opt Best number of polygons per leaf
			//----------------------------------------------------------------------------------------------------------------------
			settings(unsigned int i_maxdepth, unsigned int i_min, unsigned int i_max, unsigned int i_opt) : m_maxdepth(i_maxdepth), m_min(i_min),m_max(i_max), m_opt(i_opt) {}
			
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Get the maximum depth
			/// @return Maximum depth
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int max_depth() const { return m_maxdepth; }
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Get the minimum number of polygons per leaf
			/// @return Minimum count
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int minimum_count() const { return m_min; }
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Get the best number of polygons per leaf
			/// @return Optimum count
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int optimum_count() const { return m_opt; }
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Get the maximum number of polygons per leaf
			/// @return Maximum count
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int maximum_count() const { return m_max; }
		private :
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Maximum depth
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int m_maxdepth;
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Minimum count
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int m_min;
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Maximum count
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int m_max;
			//----------------------------------------------------------------------------------------------------------------------
			/// @brief Optimum count
			//----------------------------------------------------------------------------------------------------------------------
			unsigned int m_opt;
		};
	}
}

#endif // SDF_LOOKUP_SETTINGS_INCLUDED