///-----------------------------------------------------------------------------------------------
/// \file RectDrawable.h
/// \brief This is a simple drawable that will draw a solid rectangle with a border
/// \author Leigh McLoughlin
/// \version 1.0
///-----------------------------------------------------------------------------------------------

#ifndef __SHIVA_RESOURCESYSTEM_RECTDRAWABLE__
#define __SHIVA_RESOURCESYSTEM_RECTDRAWABLE__

#include "Drawable.h"
#include "Utility/GPUProgram.h"

namespace ShivaGUI
{
	class RectDrawable : public Drawable
	{
	public:

		//----------------------------------------------------------------------------------
		/// \brief Ctor
		//----------------------------------------------------------------------------------
		RectDrawable();
		//----------------------------------------------------------------------------------
		/// \brief Dtor
		//----------------------------------------------------------------------------------
		virtual ~RectDrawable();
		//----------------------------------------------------------------------------------
		/// \brief For setting up the Drawable from xml
		/// \param [in] _xmlElement
		/// \param [in] _resources
		//----------------------------------------------------------------------------------
		virtual void Inflate( TiXmlElement* _xmlElement, ResourceManager* _resources );
		//----------------------------------------------------------------------------------
		/// \brief Draw method
		//----------------------------------------------------------------------------------
		virtual void Draw();
		//----------------------------------------------------------------------------------
		/// \brief Set fill colour
		/// \param [in] _r
		/// \param [in] _g
		/// \param [in] _b
		/// \param [in] _a
		//----------------------------------------------------------------------------------
		void SetFillColour( const float &_r, const float &_g, const float &_b, const float &_a ) { m_fillR = _r; m_fillG = _g; m_fillB = _b; m_fillA = _a; }
		//----------------------------------------------------------------------------------
		/// \brief Set border colour
		/// \param [in] _r
		/// \param [in] _g
		/// \param [in] _b
		/// \param [in] _a
		//----------------------------------------------------------------------------------
		void SetBorderColour( const float &_r, const float &_g, const float &_b, const float &_a ) { m_borderR = _r; m_borderG = _g; m_borderB = _b; m_borderA = _a; }
		//----------------------------------------------------------------------------------
		void BuildVBOs();

	protected:

		//----------------------------------------------------------------------------------
		/// \brief Set fill red component
		//----------------------------------------------------------------------------------
		float m_fillR;
		//----------------------------------------------------------------------------------
		/// \brief Set fill green component
		//----------------------------------------------------------------------------------
		float m_fillG;
		//----------------------------------------------------------------------------------
		/// \brief Set fill blue component
		//----------------------------------------------------------------------------------
		float m_fillB;
		//----------------------------------------------------------------------------------
		/// \brief Set fill alpha component
		//----------------------------------------------------------------------------------
		float m_fillA;
		//----------------------------------------------------------------------------------
		/// \brief Set border red component
		//----------------------------------------------------------------------------------
		float m_borderR;
		//----------------------------------------------------------------------------------
		/// \brief Set border green component
		//----------------------------------------------------------------------------------
		float m_borderG;
		//----------------------------------------------------------------------------------
		/// \brief Set border blue component
		//----------------------------------------------------------------------------------
		float m_borderB;
		//----------------------------------------------------------------------------------
		/// \brief Set border alpha component
		//----------------------------------------------------------------------------------
		float m_borderA;
		//----------------------------------------------------------------------------------
		/// \brief Set bounds
		/// \param [in] _left
		/// \param [in] _top
		/// \param [in] _right
		/// \param [in] _bottom
		/// \param [in] _gravity
		//----------------------------------------------------------------------------------
		virtual void OnSetBounds( float _left, float _top, float _right, float _bottom, unsigned int _gravity );
		//----------------------------------------------------------------------------------
		/// \brief Rect fill VAO
		//----------------------------------------------------------------------------------
		GLuint m_rectFillVAO;
		//----------------------------------------------------------------------------------
		/// \brief Rect border VAO 
		//----------------------------------------------------------------------------------
		GLuint m_rectBorderVAO;
		//----------------------------------------------------------------------------------
		/// \brief Fills shader
		//----------------------------------------------------------------------------------
		Utility::GPUProgram* m_fillShader;
		//----------------------------------------------------------------------------------
		/// \brief Border shader
		//----------------------------------------------------------------------------------
		Utility::GPUProgram* m_borderShader;
		//----------------------------------------------------------------------------------

	};
}

#endif
