
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
#ifndef __SHIVA_UTILITY_GPUVARIABLE__
#define __SHIVA_UTILITY_GPUVARIABLE__
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
#include <string>

//////////////////////////////////////////////////////////////////////////
#include "Utility/GPUShader.h"
#include "Utility/GPUProgram.h"

//////////////////////////////////////////////////////////////////////////

namespace Utility
{

	class GPUVariable
	{
	public:

		/// \param variableName This is the name in the shader of the uniform that is to be bound
		GPUVariable(GPUProgram *program, GPUShader *shader, std::string variableName);
		~GPUVariable();

		void UniformInt(int);
		void UniformFloat(float);
		void UniformFloat3(float*);
		void UniformFloat4(float*);
		void UniformMatrix4(float*);

	protected:

		unsigned int _object;
		int _ID;

	};

}

//////////////////////////////////////////////////////////////////////////
#endif
