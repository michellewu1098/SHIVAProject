
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
#ifndef __SHIVA_UTILITY_GPUSHADER__
#define __SHIVA_UTILITY_GPUSHADER__
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
#include <string>

//////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////

namespace Utility
{

	class GPUShader
	{
	public:

		enum ShaderType
		{
			VERTEX,
			FRAGMENT
		};

		GPUShader(ShaderType);
		~GPUShader();


		bool Load(std::string source);

		bool LoadFromFile(std::string fileName);

		bool CompileLink(unsigned int programID);

		bool AttachObject(unsigned int objectID);

	protected:
		std::string _source;
		unsigned int _shaderHandle;
		ShaderType _type;
	};

}

//////////////////////////////////////////////////////////////////////////
#endif
